dnl this files has to be processed by autoconf
AC_PREREQ(2.61)

AC_INIT([sqface],[0.0.1])
AC_CONFIG_SRCDIR([README])
AC_CONFIG_SRCDIR(src/sqface.h)
AC_CONFIG_HEADERS(src/sqface_config.h)
AM_INIT_AUTOMAKE([no-define])
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LD

AM_PROG_LIBTOOL
AC_PROG_INSTALL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

dnl Checks for header files.
AC_CHECK_HEADERS(string.h stdlib.h stdio.h time.h math.h)

MAJOR_VERSION=0
MINOR_VERSION=0
BUGFIX_VERSION=1
EXTRA_VERSION="-dev"

SQFACE_VERSION_TEXT="${MAJOR_VERSION}.${MINOR_VERSION}.${BUGFIX_VERSION}${EXTRA_VERSION}"
SQFACE_VERSION_ID=`expr [$]MAJOR_VERSION \* 10000 + [$]MINOR_VERSION \* 100 + [$]BUGFIX_VERSION`

dnl generate sqface_version.h {{{
echo "/* automatically generated by configure */" > sqface_version.h.new
echo "/* edit configure.in to change the version number */" >> sqface_version.h.new
echo "#define SQFACE_MAJOR_VERSION $MAJOR_VERSION" >> sqface_version.h.new
echo "#define SQFACE_MINOR_VERSION $MINOR_VERSION" >> sqface_version.h.new
echo "#define SQFACE_BUGFIX_VERSION $BUGFIX_VERSION" >> sqface_version.h.new
echo "#define SQFACE_EXTRA_VERSION \"$EXTRA_VERSION\"" >> sqface_version.h.new
echo "#define SQFACE_VERSION_TEXT \"$SQFACE_VERSION_TEXT\"" >> sqface_version.h.new
echo "#define SQFACE_VERSION_ID $SQFACE_VERSION_ID" >> sqface_version.h.new
cmp sqface_version.h.new $srcdir/src/sqface_version.h >/dev/null 2>&1
if test $? -ne 0 ; then
  rm -f $srcdir/src/sqface_version.h && mv sqface_version.h.new $srcdir/src/sqface_version.h && \
  echo 'Updated src/sqface_version.h'
else
  rm -f sqface_version.h.new
fi
dnl }}}

DEFAULT_INSTALL_PREFIX="/usr/local"
STANDARD_PREFIXES="/usr /usr/local /opt /local"

dnl {{{ --with-libdir
AC_ARG_WITH(libdir,
  [AS_HELP_STRING([--with-libdir],[look for libraries in .../NAME rather than .../lib])
  ],
  [LIBDIR=$with_libdir],
  [LIBDIR=lib]
)
dnl }}}

dnl {{{ --with-freeimage
AC_ARG_WITH(freeimage,
  [AS_HELP_STRING([--with-freeimage],[specify FreeImage install prefix])
  ],
  [ ],
  [with_freeimage=yes]
)

if test "x$with_freeimage" = "xno"; then
  AC_MSG_ERROR([FreeImage library and headers are required to build sqface]);
else
  AC_MSG_CHECKING([FreeImage install prefix])

  if test "x$with_freeimage" = "xyes"; then
    for i in `echo "$STANDARD_PREFIXES"`; do
      if test -f "$i/include/FreeImage.h"; then
        FREEIMAGE_DIR="$i"
        break;
      fi
    done
  else
    if test -f "$with_freeimage/include/FreeImage.h"; then
      FREEIMAGE_DIR="$with_freeimage"
      break;
    else
      AC_MSG_ERROR([Can't find FreeImage headers under $with_freeimage directory]);
    fi
  fi

  if test "x$FREEIMAGE_DIR" = "x"; then
    AC_MSG_ERROR([Unable to locate FreeImage headers, please use --with-freeimage=<DIR>]);
  fi

  AC_MSG_RESULT([$FREEIMAGE_DIR])
  LDFLAGS="$LDFLAGS -L$FREEIMAGE_DIR/$LIBDIR"
  CFLAGS="$CFLAGS -I$FREEIMAGE_DIR/include"
  CXXFLAGS="$CXXFLAGS -I$FREEIMAGE_DIR/include"
  LIBS="$LIBS -lfreeimage"

  AC_CHECK_LIB([freeimage], [FreeImage_Load], [], [
    AC_MSG_ERROR([FreeImage_Load() is missing, check config.log for more details])
  ])

  HAVE_FREEIMAGE=yes
fi
dnl }}}

dnl {{{ --enable-debug
AC_ARG_ENABLE(debug,
  [AS_HELP_STRING([--enable-debug],[enable debugging symbols and compile flags])
  ],
  [
    if test x"$enableval" = xyes ; then
      debug="yes"
    else
      debug="no"
    fi
  ]
)

if test x"$debug" = xyes ; then
  AC_DEFINE([SQFACE_DEBUG], [], [debug build])

  if test x"$GCC" = xyes; then

    dnl Remove any optimization flags from CFLAGS and CXXFLAGS
    changequote({,})
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-O[0-9s]*//g'`
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-g[0-2]\? //g'`
    CXXFLAGS=`echo "$CXXFLAGS" | sed -e 's/-O[0-9s]*//g'`
    CXXFLAGS=`echo "$CXXFLAGS" | sed -e 's/-g[0-2]\? //g'`
    changequote([,])
    CFLAGS="$CFLAGS -g3 -Wall -O0"
    CXXFLAGS="$CXXFLAGS -g3 -Wall -O0"

  fi

  dnl Do not strip symbols from developer object files.
  INSTALL_STRIP_FLAG=""
else
  dnl Make sure to strip symbols from non-developer object files.
  INSTALL_STRIP_FLAG="-s"
fi
dnl }}}

LIBS="$LIBS -lm"

AC_SUBST(INSTALL_STRIP_FLAG)

AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile])
AC_OUTPUT

